name: run-tests
on:
  push:
    branches:
      - master
      - dev
  pull_request:
    branches:
      - master
jobs:
  # go vet and go fmt are mandatory.
  # Other linters are optional but should dispay issues.
  linters:
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Setup go 1.20
        uses: actions/setup-go@v3
        with:
          go-version: '1.20'
      - name: Run go vet
        run: go vet ./...
      - name: Run gofmt
        run: |
          gofmt -s -l .
          if [ "$(gofmt -l . | wc -l)" -gt 0 ]; then exit 1; fi
      - name: Run staticcheck
        run: |
          go install honnef.co/go/tools/cmd/staticcheck@latest
          staticcheck ./...
        continue-on-error: true
      - name: Run errcheck
        run: |
          go install github.com/kisielk/errcheck@latest
          errcheck ./...
        continue-on-error: true

  tests:
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Setup Go 1.20
        uses: actions/setup-go@v3
        with:
          go-version: '1.20'
      - name: Install git annex dependency
        run: |
          bash <(wget -q -O- http://neuro.debian.net/_files/neurodebian-travis.sh)
          sudo apt-get update -qq
          sudo apt-get install git-annex-standalone
          git version
          git annex version
      - name: Show Go version
        run: go version
      - name: Fetch dependencies
        run: go get -d ./...
      - name: Run build
        run: go build ./cmd/gindoid
      - name: Run tests
        run: go test ./...
  run-coverall:
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Use golang version 1.20
        uses: actions/setup-go@v3
        with:
          go-version: '1.20'
      - name: Install git annex dependency
        run: |
          bash <(wget -q -O- http://neuro.debian.net/_files/neurodebian-travis.sh)
          sudo apt-get update -qq
          sudo apt-get install git-annex-standalone
          git version
          git annex version
      - name: Fetch dependencies
        run: |
          go get -d ./...
          go get github.com/mattn/goveralls
      - name: Create test coverage
        run: go test -covermode atomic -coverprofile=covprofile ./...
      - name: Send coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: goveralls -coverprofile=covprofile -service=github
